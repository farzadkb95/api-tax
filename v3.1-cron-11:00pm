<?php
/**
 * Plugin Name: api-tax
 * Description: Get data from tax government API and store it in modi_farzad table.
 * Plugin URI: https://tarrahiweb.com
 * Author: farzad beheshti
 * Version: 3.14.1
 * Elementor tested up to: 3.14.0
 * Author URI: https://go.elementor.com/wp-dash-wp-plugins-author-uri/
 *
 * Text Domain: elementor-pro
 */

if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly.
}

// Register the activation hook to create the table and fetch API data upon plugin activation
register_activation_hook(__FILE__, 'api_tax_plugin_activation');

function api_tax_plugin_activation()
{
    // Create the table if it doesn't exist
    global $wpdb;
    $table_name = $wpdb->prefix . 'modi_farzad'; // Replace 'modi_farzad' with your desired table name

    $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE IF NOT EXISTS $table_name (
        id INT(11) NOT NULL AUTO_INCREMENT,
        ix INT(11) NOT NULL,
        cd VARCHAR(255) NOT NULL,
        tp VARCHAR(255) NOT NULL,
        dt VARCHAR(255) NOT NULL,
        tt VARCHAR(255) NOT NULL,
        rt VARCHAR(255) NOT NULL,
        ds TEXT,
        vp TEXT,
        sg TEXT,
        PRIMARY KEY (id),
        UNIQUE KEY ix (ix)
    ) $charset_collate;";

    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    dbDelta($sql);

    // Schedule the daily API data fetch event
    if (!wp_next_scheduled('daily_api_data_fetch')) {
        wp_schedule_event(strtotime('23:00:00'), 'daily', 'daily_api_data_fetch');
    }
}

// Function to fetch and store the API data
function fetch_api_data()
{
    // Set the timeout value for the API request
    $timeout = 1500; // Timeout value in seconds (adjust as needed)

    // Fetch data from the API
    $url = 'https://api.mega-pay.ir/api/stuffid/query?page=17&items_per_page=50000';
    $response = wp_remote_get($url, array('timeout' => $timeout));

    if (is_wp_error($response)) {
        // Handle error if the API request fails
        error_log($response->get_error_message());
        return;
    }

    $api_data = json_decode(wp_remote_retrieve_body($response), true);

    if (!$api_data) {
        // Handle error if JSON parsing fails
        error_log('Failed to parse JSON data.');
        return;
    }

    $data = isset($api_data['data']) ? $api_data['data'] : array();

    if (empty($data)) {
        // Handle error if data array is empty
        error_log('No data found in the API response.');
        return;
    }

    // Store the data in the WordPress database, checking for duplicates
    global $wpdb;
    $table_name = $wpdb->prefix . 'modi_farzad';

    foreach ($data as $item) {
        // Check if the item already exists in the database
        $existing_item = $wpdb->get_row($wpdb->prepare("SELECT * FROM $table_name WHERE ix = %d", $item['ix']), ARRAY_A);

        if (!$existing_item) {
            // Prepare the data for insertion and sanitize it for security
            $data_to_insert = array(
                'ix' => isset($item['ix']) ? absint($item['ix']) : 0,
                'cd' => isset($item['cd']) ? sanitize_text_field($item['cd']) : '',
                'tp' => isset($item['tp']) ? sanitize_text_field($item['tp']) : '',
                'dt' => isset($item['dt']) ? sanitize_text_field($item['dt']) : '',
                'tt' => isset($item['tt']) ? sanitize_text_field($item['tt']) : '',
                'rt' => isset($item['rt']) ? sanitize_text_field($item['rt']) : '',
                'ds' => isset($item['ds']) ? wp_kses_post($item['ds']) : '',
                'vp' => isset($item['vp']) ? wp_kses_post($item['vp']) : '',
                'sg' => isset($item['sg']) ? wp_kses_post($item['sg']) : '',
            );

            // Insert the new item into the database
            $wpdb->insert($table_name, $data_to_insert);
        }
    }

    // Log a success message
    error_log('Data fetched from the API and stored in the database successfully.');

    // Log the retrieved data for debugging purposes
    error_log('Retrieved data:');
    error_log(print_r($data, true));
}

// Function to fetch API data daily
function fetch_api_data_daily()
{
    // Call the existing fetch_api_data function
    fetch_api_data();
}
add_action('daily_api_data_fetch', 'fetch_api_data_daily');
